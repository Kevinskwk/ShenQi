#!/usr/bin/env python3

'''
Node that connects to Firebase
'''

import rospy
import actionlib
from chess_msgs.msg import PlayerInfo
from chess_msgs.msg import QuickMatchAction, WaitCmdAction
from chess_msgs.srv import SendCmd, ServerInfo

# ROS action server
class QuickMatchServer(object):
    def __init__(self, name):
        self._action_name = name
        self._as = actionlib.SimpleActionServer(self._action_name, QuickMatchAction, execute_cb=self.execute_cb, auto_start = False)
        self._as.start()
      
    def execute_cb(self, goal):
        pass

class WaitCmdServer(object):
    def __init__(self, name):
        self._action_name = name
        self._as = actionlib.SimpleActionServer(self._action_name, WaitCmdAction, execute_cb=self.execute_cb, auto_start = False)
        self._as.start()
      
    def execute_cb(self, goal):
        pass

# ROS subscriber
player_sub = rospy.Subscriber('player_info', PlayerInfo, player_cb, queue_size=1)

# ROS service
send_cmd_srv = rospy.Service('send_cmd', SendCmd, handle_send_cmd)
server_info_srv = rospy.Service('server_info', ServerInfo, handle_server_info)

# callback functions
def player_cb(msg):
    pass

# service handling functions
def handle_send_cmd(req):
    pass

def handle_server_info(req):
    pass


rospy.init_node('server_node', anonymous = False)
quick_match_server = QuickMatchServer('quick_match')
wait_cmd_server = WaitCmdServer('wait_cmd')

rospy.spin()
