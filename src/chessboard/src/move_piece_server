#!/usr/bin/env python3

'''
Node that communicates with Microcontroller sends move piece commands.
Hosts a ROS action server for move_piece
'''

import rospy
import actionlib
from chess_msgs.msg import MovePieceAction, MovePieceResult, MovePieceFeedback
from std_msgs.msg import UInt16MultiArray, UInt8MultiArray

class MovePieceServer(object):
    def __init__(self, name):
        self._action_name = name
        self._as = actionlib.SimpleActionServer(
            self._action_name,
            MovePieceAction,
            execute_cb=self.execute_cb,
            auto_start = False)
        self._as.start()
      
    def execute_cb(self, goal):
        # TODO: implement properly
        rate = rospy.Rate(1)
        for i in goal.moves:
            self._as.publish_feedback(MovePieceFeedback(i))
            rate.sleep()

        self._as.set_succeeded(MovePieceResult(True))

rospy.init_node('move_piece_node', anonymous = True)
move_piece_server = MovePieceServer('move_piece')
rospy.spin()
